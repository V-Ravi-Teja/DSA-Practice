public class ClosestMinMax {
    /*
    * Problem Description
        Given an array A, find the size of the smallest subarray such that it contains at least one occurrence of the
        maximum value of the array
        and at least one occurrence of the minimum value of the array.

        Problem Constraints
            1 <= |A| <= 2000

        Input Format
            First and only argument is vector A

        Output Format
            Return the length of the smallest subarray which has at least one occurrence of minimum and maximum element of the array

        Example Input
            Input 1:
            A = [1, 3, 2]
            Input 2:
            A = [2, 6, 1, 6, 9]
        Example Output
            Output 1
             2
            Output 2:
             3

        Example Explanation
            Explanation 1:
             Take the 1st and 2nd elements as they are the minimum and maximum elements respectievly.
            Explanation 2:
             Take the last 3 elements of the array.
    */
    public int solve(ArrayList<Integer> A) {
        int answer = A.size();
        int max = 0;
        int min = 3000;
        for(int i : A){
            if(i < min) min = i;
            if(i > max) max = i;
        }
        if(max==min) return 1;
        int maxLatest = -1;
        int minLatest = -1;
        for(int i = 0; i < A.size(); i++){
            if(A.get(i)==max) // encountered wild max update var and check length is less than answer
            {
                maxLatest = i;
                if(minLatest!=-1)
                    if((Math.abs(maxLatest-minLatest)+1) < answer) answer = Math.abs(maxLatest-minLatest)+1;
            }
            else if(A.get(i)==min) // encountered wild min update var and check length is less than answer
            {
                minLatest = i;
                if(maxLatest!=-1)
                    if((Math.abs(maxLatest-minLatest)+1) < answer) answer = Math.abs(maxLatest-minLatest)+1;
            }
            else{
                continue;
            }
        }
        return answer;
    }
}